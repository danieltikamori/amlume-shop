# promtail-config.yml

server:
  http_listen_port: 9080 # Port Promtail listens on inside the container or 0
  grpc_listen_port: 0    # Disable gRPC if not needed

positions:
  filename: /tmp/positions.yaml # Path inside the container to store file read positions

# Generate the API key through Grafana Cloud
# Generate using the link below the Sending Logs section. NOT the Using Grafana with ... section

clients:
  # Use environment variable for Loki endpoint

  - url: ${LOKI_URL}
    basic_auth:
      username: ${PROMTAIL_USER}
      password: ${PROMTAIL_PASSWORD}
    # Optional: Add tenant_id if required by your Loki setup (Grafana Cloud usually uses basic_auth username)
    tenant_id: ${PROMTAIL_USER}
#    basic_auth:
#      username: ${LOKI_USERNAME} # Use environment variable for Loki username
#      password: ${LOKI_PASSWORD} # Use environment variable for Loki API Key/Password
#    # Optional: Add tenant_id if required by your Loki setup (Grafana Cloud usually uses basic_auth username)
#    # tenant_id: <your_tenant_id>

scrape_configs:
  - job_name: amlume-shop-local # Name for this scraping job
    static_configs:
      - targets:
          - localhost # Refers to the Promtail container itself
        labels:
          job: amlume-shop # Label identifying the application logs
          env: local       # Label indicating the environment
          # IMPORTANT: This __path__ points to the log file *inside* the container,
          # mapped via the volume mount in docker-compose.yaml
          __path__: /var/log/app/application.log
          # You can add more labels here if needed