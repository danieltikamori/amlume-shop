<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2025 Daniel Itiro Tikamori. All rights reserved.
  ~
  ~ This software is proprietary, not intended for public distribution, open source, or commercial use. All rights are reserved. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, electronic or mechanical, including photocopying, recording, or by any information storage or retrieval system, without the prior written permission of the copyright holder.
  ~
  ~ Permission to use, copy, modify, and distribute this software is strictly prohibited without prior written authorization from the copyright holder.
  ~
  ~ Please contact the copyright holder at echo ZnVpd3pjaHBzQG1vem1haWwuY29t | base64 -d && echo for any inquiries or requests for authorization to use the software.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>me.amlu</groupId>
        <artifactId>authserver-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!--    <parent>-->
    <!--        <groupId>org.springframework.boot</groupId>-->
    <!--        <artifactId>spring-boot-starter-parent</artifactId>-->
    <!--        <version>3.5.0</version>-->
    <!--        <relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
    <!--    </parent>-->
    <artifactId>authserver</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>authserver</name>
    <description>authserver</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer>
            <id/>
            <name/>
            <email/>
            <url/>
            <organization/>
            <organizationUrl/>
            <roles/>
            <timezone/>
            <properties>
                <key>value</key>
            </properties>
        </developer>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>21</java.version>
        <spring-boot-admin.version>3.5.0</spring-boot-admin.version>
        <spring-vault-core.version>3.1.2</spring-vault-core.version>
        <!--        Enforce Tomcat 11 due to critical vulnerabilities. Recommendation: minimum version 10.1.41. See https://tomcat.apache.org/security-11.html -->
        <tomcat.version>11.0.7</tomcat.version>
        <libphonenumber.version>8.13.54</libphonenumber.version>
        <libphonenumber-prefixmapper.version>2.239</libphonenumber-prefixmapper.version>
        <libphonenumber-geocoder.version>2.239</libphonenumber-geocoder.version>
        <libphonenumber-carrier.version>1.229</libphonenumber-carrier.version>
        <commons-validator.version>1.9.0</commons-validator.version>
        <webauthn4j-core.version>0.29.2.RELEASE</webauthn4j-core.version>
        <webauthn4j-spring-security.version>0.11.2.RELEASE</webauthn4j-spring-security.version>
        <selenium.version>4.32.0</selenium.version>
        <google-api-client.version>2.8.0</google-api-client.version>
        <jte.version>3.2.1</jte.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <spring-cloud.version>2025.0.0</spring-cloud.version>
        <jspecify.version>1.0.0</jspecify.version>
        <spring-boot-admin-starter-server.version>3.5.0</spring-boot-admin-starter-server.version>
        <spring-boot-admin-starter-client.version>3.5.0</spring-boot-admin-starter-client.version>
        <spring-boot-admin-server-ui.version>3.5.0</spring-boot-admin-server-ui.version>
        <hypersistence-tsid.version>2.1.4</hypersistence-tsid.version>
        <maxmind.geoip2.version>4.2.1</maxmind.geoip2.version>
        <tika-core.version>3.1.0</tika-core.version>
        <apache.commons.compress.version>1.27.1</apache.commons.compress.version>
        <apache.commons.csv.version>1.11.0</apache.commons.csv.version>
        <commons-codec.version>1.17.2</commons-codec.version>
        <newrelic.logback.version>3.3.0</newrelic.logback.version>


    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- ... Dependency on domain module -->
        <dependency>
            <groupId>me.amlu</groupId>
            <artifactId>authserver-domain</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-authorization-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>com.mysql</groupId>-->
        <!--            <artifactId>mysql-connector-j</artifactId>-->
        <!--            <scope>runtime</scope>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- Add exclusions to prevent any transitive dependencies from
         pulling in older versions of JUnit, which can cause this error. -->
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.github.cdimascio</groupId>
            <artifactId>dotenv-java</artifactId>
            <version>3.1.0</version>
            <scope>test</scope>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.springframework.cloud</groupId>-->
        <!--            <artifactId>spring-cloud-config-server</artifactId>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-vault-config</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.vault/spring-vault-core -->
        <dependency>
            <groupId>org.springframework.vault</groupId>
            <artifactId>spring-vault-core</artifactId>
            <version>${spring-vault-core.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.googlecode.libphonenumber/libphonenumber -->
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>libphonenumber</artifactId>
            <version>${libphonenumber.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.googlecode.libphonenumber/prefixmapper -->
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>prefixmapper</artifactId>
            <version>${libphonenumber-prefixmapper.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.googlecode.libphonenumber/geocoder -->
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>geocoder</artifactId>
            <version>${libphonenumber-geocoder.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.googlecode.libphonenumber/carrier -->
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>carrier</artifactId>
            <version>${libphonenumber-carrier.version}</version>
        </dependency>

        <!-- MongoDB for session storage -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-mongodb</artifactId>
        </dependency>

        <!-- Redis for caching only -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>${commons-validator.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>com.webauthn4j</groupId>
            <artifactId>webauthn4j-core</artifactId>
            <version>${webauthn4j-core.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.yubico/webauthn-server-core -->
        <dependency>
            <groupId>com.yubico</groupId>
            <artifactId>webauthn-server-core</artifactId>
            <version>2.7.0</version>
            <scope>runtime</scope>
        </dependency>


        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>5.9.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>vault</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-database-postgresql -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
            <!--            <version>11.9.0</version>-->
            <scope>runtime</scope>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.flywaydb</groupId>-->
        <!--            <artifactId>flyway-mysql</artifactId> &lt;!&ndash; If using MySQL &ndash;&gt;-->
        <!--        </dependency>-->

        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
            <version>${google-api-client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
        </dependency>


        <dependency>
            <groupId>gg.jte</groupId>
            <artifactId>jte</artifactId>
            <version>${jte.version}</version>
        </dependency>

        <dependency>
            <groupId>gg.jte</groupId>
            <artifactId>jte-spring-boot-starter-3</artifactId>
            <version>${jte.version}</version>
        </dependency>

        <dependency>
            <groupId>com.webauthn4j</groupId>
            <artifactId>webauthn4j-spring-security-core</artifactId>
            <version>${webauthn4j-spring-security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-email -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
            <version>1.6.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/de.codecentric/spring-boot-admin-starter-server -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-server</artifactId>
            <version>${spring-boot-admin-starter-server.version}</version>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
        </dependency>


        <dependency>
            <groupId>org.jspecify</groupId>
            <artifactId>jspecify</artifactId>
            <version>${jspecify.version}</version>
        </dependency>
        <dependency>
            <groupId>com.maxmind.db</groupId>
            <artifactId>maxmind-db</artifactId>
            <version>3.1.1</version>
            <scope>compile</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/de.codecentric/spring-boot-admin-starter-client -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${spring-boot-admin-starter-client.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/de.codecentric/spring-boot-admin-server-ui -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-server-ui</artifactId>
            <version>${spring-boot-admin-server-ui.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-config</artifactId>
        </dependency>

        <!-- Spring Session -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-jdbc</artifactId>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>com.hazelcast</groupId>-->
        <!--            <artifactId>hazelcast-spring</artifactId>-->
        <!--            &lt;!&ndash; Version managed by Spring Boot parent or specify if needed &ndash;&gt;-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>com.hazelcast</groupId>-->
        <!--            <artifactId>hazelcast</artifactId>-->
        <!--            &lt;!&ndash; Version managed by Spring Boot parent or specify if needed &ndash;&gt;-->
        <!--        </dependency>-->

        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-bulkhead</artifactId>
            <version>2.2.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-spring6</artifactId>
            <version>2.3.0</version>
        </dependency>

        <!-- https://central.sonatype.com/artifact/io.hypersistence/hypersistence-tsid -->
        <dependency>
            <groupId>io.hypersistence</groupId>
            <artifactId>hypersistence-tsid</artifactId>
            <version>${hypersistence-tsid.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hypersistence</groupId>
            <artifactId>hypersistence-utils-hibernate-63</artifactId>
            <version>3.9.0</version>
            <scope>compile</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.maxmind.geoip2/geoip2 -->
        <dependency>
            <groupId>com.maxmind.geoip2</groupId>
            <artifactId>geoip2</artifactId>
            <version>${maxmind.geoip2.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.tika/tika-core -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${tika-core.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${apache.commons.csv.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${apache.commons.compress.version}</version>
        </dependency>

        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>4.2.30</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.slack.api</groupId>
            <artifactId>slack-api-client</artifactId>
            <version>1.42.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-jvm</artifactId>
            <version>4.2.30</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations-jakarta</artifactId>
            <version>2.2.29</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
            <version>3.6.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>

        <!-- Spring Boot Starter for Logging (already includes logback-classic) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>

        <!-- Logstash Logback Encoder -->
        <!-- This MUST be 'compile' scope (default) because our code uses net.logstash.logback.marker.Markers -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>8.1</version>
            <!-- No scope needed, 'compile' is default. Do NOT set to 'runtime'. -->
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>1.15.0</version>
        </dependency>

        <!-- ... other dependencies ... -->

        <!-- Micrometer for sending metrics to New Relic -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-new-relic</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- New Relic extension for Logback to link logs with traces -->
        <!-- https://mvnrepository.com/artifact/com.newrelic.logging/logback -->
        <dependency>
            <groupId>com.newrelic.logging</groupId>
            <artifactId>logback</artifactId>
            <version>${newrelic.logback.version}</version> <!-- Use a recent version -->
        </dependency>

        <!-- Add this dependency to enable MailSender auto-configuration -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- ... other dependencies ... -->

        <!-- We do NOT need to explicitly declare logback-classic if using spring-boot-starter-logging -->
        <!-- If you were NOT using spring-boot-starter-logging, and only using SLF4J API,
             then you might declare it like this (but it's less common in Spring Boot):
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.5.18</version>
            <scope>runtime</scope>
        </dependency>
        -->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <fork>true</fork>
                    <parameters>true</parameters>
                    <encoding>UTF-8</encoding>
                    <compilerArgs>
                        <arg>--should-stop=ifError=FLOW</arg>
                        <arg>-XDcompilePolicy=simple</arg>
                        <!--                        If <fork>true</fork>:-->
                        <!--                        <arg>-Xplugin:ErrorProne -XepOpt:NullAway:AnnotatedPackages=com.uber</arg>-->
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <!-- other annotation processors -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>

                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_annotations</artifactId>
                            <version>2.38.0</version>
                        </path>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>2.38.0</version>
                        </path>
                        <path>
                            <groupId>com.uber.nullaway</groupId>
                            <artifactId>nullaway</artifactId>
                            <version>0.10.15</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!--            If you prefer to keep the config directory in the project root, you can tell Maven Surefire to run tests from the project root directory.-->
            <!--            Alternative to classpath usage. Enable it if not using classpath.-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--                &lt;!&ndash; Make sure version matches if already declared, e.g., 3.5.3 &ndash;&gt;-->
                <!--                <configuration>-->
                <!--                    &lt;!&ndash; Set working directory to the parent (project root) &ndash;&gt;-->
                <!--                    <workingDirectory>${project.basedir}/..</workingDirectory>-->

                <!-- Use version from parent or specify explicitly e.g., <version>3.5.3</version> -->
                <configuration>
                    <!-- Set working directory to where resources are copied -->
                    <workingDirectory>${project.build.outputDirectory}</workingDirectory>
                    <!-- You might also need to pass the env var if not picked up automatically,
                         though Spring Boot test usually handles .env -->

                    <!-- For multiple modules, add this: Define a system property pointing to the project root -->
                    <systemPropertyVariables>
                        <project.root.basedir>${maven.multiModuleProjectDirectory}</project.root.basedir>
                    </systemPropertyVariables>
                    <!--
                    <environmentVariables>
                        <APP_CENTRAL_TRUSTSTORE_PASSWORD>${env.APP_CENTRAL_TRUSTSTORE_PASSWORD}</APP_CENTRAL_TRUSTSTORE_PASSWORD>
                    </environmentVariables>
                    -->
                </configuration>
            </plugin>
            <!--            <plugin>-->
            <!--                <groupId>org.hibernate.orm.tooling</groupId>-->
            <!--                <artifactId>hibernate-enhance-maven-plugin</artifactId>-->
            <!--                <version>${hibernate.version}</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>enhance</id>-->
            <!--                        <goals>-->
            <!--                            <goal>enhance</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <enableLazyInitialization>true</enableLazyInitialization>-->
            <!--                            <enableDirtyTracking>true</enableDirtyTracking>-->
            <!--                            <enableAssociationManagement>true</enableAssociationManagement>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>gg.jte</groupId>
                <artifactId>jte-maven-plugin</artifactId>
                <version>${jte.version}</version>
                <!-- The jte-maven-plugin applies to all modules by default. We need to tell Maven not to run this plugin for the authserver-hazelcast-shareable module. -->
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>jte-generate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/jte</sourceDirectory>
                            <contentType>Html</contentType>
                            <binaryStaticContent>true</binaryStaticContent>
                            <targetResourceDirectory>${project.build.outputDirectory}</targetResourceDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Since we use precompiled binary content parts, we need to copy those resources next to the compiled class files (the maven plugin doesn't do that for us) -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/generated-sources/jte</directory>
                                    <includes>
                                        <include>**/*.bin</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
