<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2025 Daniel Itiro Tikamori. All rights reserved.
  ~
  ~ This software is proprietary, not intended for public distribution, open source, or commercial use. All rights are reserved. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, electronic or mechanical, including photocopying, recording, or by any information storage or retrieval system, without the prior written permission of the copyright holder.
  ~
  ~ Permission to use, copy, modify, and distribute this software is strictly prohibited without prior written authorization from the copyright holder.
  ~
  ~ Please contact the copyright holder at echo ZnVpd3pjaHBzQG1vem1haWwuY29t | base64 -d && echo for any inquiries or requests for authorization to use the software.
  -->

<configuration>

    <!-- Include Spring Boot's default configurations -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- Define properties for application name and log file path -->
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/spring.log}"/>

    <!--
     Console Appender with JSON layout using LogstashLogbackEncoder.
     This is the primary appender for containerized environments.
     Log shipping agents (like Promtail, Fluentd) will collect logs from stdout.
    -->
    <appender name="CONSOLE_JSON" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <jsonGeneratorDecorator class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
            <fieldNames>
                <!-- Standardize field names for better compatibility with Grafana Loki -->
                <timestamp>time</timestamp>
                <version>[ignore]</version> <!-- Don't include the logback version -->
                <level>level</level>
                <thread>thread</thread>
                <logger>logger</logger>
                <message>message</message>
                <context>context</context>
                <levelValue>[ignore]</levelValue>
            </fieldNames>
            <!-- Add custom fields that are useful for filtering and context in Grafana -->
            <customFields>{"app_name":"${springAppName:-authserver}"}</customFields>
        </encoder>
    </appender>

    <!-- Root logger configuration -->
    <root level="INFO">
        <!-- In a container environment, logging to the console is preferred. -->
        <appender-ref ref="CONSOLE_JSON"/>
    </root>

</configuration>
