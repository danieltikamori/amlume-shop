app:
  ssl:
    trust-store:
      # Use 'file:' for filesystem or 'classpath:' if packaged in JAR
      path: file:./config/central-truststore.jks
      # LOAD SECURELY! Use environment variable for the password.
      password: ${APP_CENTRAL_TRUSTSTORE_PASSWORD}
      # type: JKS # Optional: Specify type if not JKS

spring:
  application:
    name: ${AS_NAME:authserver}
  config:
    import: application_prod.yml
  profiles:
    active: local # default or prod
#  datasource:
#    #    url: jdbc:mysql://localhost:3306/amlume_db?sslMode=VERIFY_CA&trustCertificateKeyStoreUrl=file:./config/central-truststore.jks&trustCertificateKeyStoreType=JKS
#    url: jdbc:mysql://localhost:3306/amlume_db?sslMode=VERIFY_CA&trustCertificateKeyStoreUrl=file:./config/central-truststore.jks&trustCertificateKeyStoreType=PKCS12&trustCertificateKeyStorePassword=${APP_CENTRAL_TRUSTSTORE_PASSWORD} # <-- Corrected and password added
#    #    url: jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:amlume_db}
#    username: ${AUTH_DB_USER} # Ensure this is the correct user (e.g., auth_user)
#    password: ${AUTH_DB_PASSWORD} # Ensure this is the correct password for the user
#    driverClassName: com.mysql.cj.jdbc.Driver

  # --- JPA / Hibernate ---
  # Disable open-in-view for performance
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update # Use "update" for dev, create-drop if schema changes, "validate" or "none" for prod
      show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
          time_zone: UTC

server:
  port: ${AS_SERVER_PORT:9000}

logging:
  level:
    org:
      springframework:
        security: ${SPRING_SECURITY_LOG_LEVEL:TRACE}
  pattern:
    console: ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}