app:
  ssl:
    trust-store:
      # Use 'file:' for filesystem or 'classpath:' if packaged in JAR
      path: file:./config/central-truststore.jks
      # LOAD SECURELY! Use environment variable for the password.
      password: ${APP_CENTRAL_TRUSTSTORE_PASSWORD}
      # type: JKS # Optional: Specify type if not JKS

oauth2:
  clients:
    shopClient:
      redirect-uri: https://shop.amlu.me/login/oauth2/code/amlumeclient
    # postmanClient:
    #   redirect-uri: https://oauth.pstmn.io/v1/callback # This might remain the same
    #   custom-redirect-uri: https://auth.amlu.me/login/oauth2/code/custom-postman # Or a public domain for authserver


spring:
  config:
    activate:
      on-profile: prod
  application:
    name: ${AS_NAME:authserver}
  datasource:
    #    url: jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:amlume_db}
    #    url: jdbc:mysql://localhost:3306/amlume_db?sslMode=VERIFY_CA&trustCertificateKeyStoreUrl=file:./config/central-truststore.jks&trustCertificateKeyStoreType=JKS&trustCertificateKeyStorePassword=${APP_CENTRAL_TRUSTSTORE_PASSWORD} # <-- Corrected and password added
    url: jdbc:mysql://${AUTH_DB_HOST:mysql-auth}:${AUTH_DB_PORT_PROD:3306}/${AUTH_DB_NAME:amlume_auth_db}?sslMode=VERIFY_CA&trustCertificateKeyStoreUrl=file:./config/central-truststore.jks&trustCertificateKeyStoreType=PKCS12&trustCertificateKeyStorePassword=${APP_CENTRAL_TRUSTSTORE_PASSWORD}
    username: ${AUTH_DB_USER}
    password: ${AUTH_DB_PASSWORD}
    driverClassName: com.mysql.cj.jdbc.Driver

  # --- JPA / Hibernate ---
  # Disable open-in-view for performance
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false # Disable for production. Performance tuning.
    hibernate:
      ddl-auto: validate # Or "none" if using Flyway/Liquibase
      # show-sql: false # Already set above
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
          time_zone: UTC

  # --- Spring Security ---
  security:
    # Enable CSRF protection
    csrf: true
    # Enable CORS. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    cors: true
    # Enable X-Frame-Options. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    xframe: true
    # Enable X-XSS-Protection. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    xss: true
    # Enable HSTS. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    hsts: true
    # Enable H2 Console. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    h2console: false
    # Enable HTTP Basic Authentication. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    basic: true
    # Enable OAuth2 Client. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    oauth2client: true
    # Enable OAuth2 Resource Server. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    oauth2resourceserver: true
    # Enable OAuth2 Authorization Server. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    oauth2authorizationserver: true
    # Enable OAuth2 JWT. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    oauth2jwt: true
    # Enable OAuth2 JWT Resource Server. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    oauth2jwtresourceserver: true
    # Enable OAuth2 JWT Authorization Server. See XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    oauth2jwtauthorizationserver: true

server:
  port: ${AS_SERVER_PORT:9000}

logging:
  level:
    org:
      springframework:
        security: ${SPRING_SECURITY_LOG_LEVEL:ERROR}
  pattern:
    console: ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}
