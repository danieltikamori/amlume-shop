/*
 * Copyright (c) 2025 Daniel Itiro Tikamori. All rights reserved.
 *
 * This software is proprietary, not intended for public distribution, open source, or commercial use. All rights are reserved. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, electronic or mechanical, including photocopying, recording, or by any information storage or retrieval system, without the prior written permission of the copyright holder.
 *
 * Permission to use, copy, modify, and distribute this software is strictly prohibited without prior written authorization from the copyright holder.
 *
 * Please contact the copyright holder at fuiwzchps@mozmail.com for any inquiries or requests for authorization to use the software.
 */

package me.amlu.shop.amlume_shop.service;

import org.springframework.security.crypto.argon2.Argon2PasswordEncoder;
import org.springframework.stereotype.Service;

@Service
public class PasswordService {
    
    private final Argon2PasswordEncoder passwordEncoder;
    
    public PasswordService() {
        // Parameters:
        // saltLength = 16 (recommended)
        // hashLength = 32 (recommended)
        // parallelism = 1 (number of parallel threads)
        // memory = 1 << 14 (16MB of memory)
        // iterations = 2 (number of passes)
        this.passwordEncoder = new Argon2PasswordEncoder(
            16,    // saltLength
            32,    // hashLength
            1,     // parallelism
            1 << 14, // memory
            2       // iterations
        );
    }
    
    public String hashPassword(String plainTextPassword) {
        return passwordEncoder.encode(plainTextPassword);
    }
    
    public boolean verifyPassword(String plainTextPassword, String hashedPassword) {
        return passwordEncoder.matches(plainTextPassword, hashedPassword);
    }
}
