#
# Copyright (c) 2025 Daniel Itiro Tikamori. All rights reserved.
#
# This software is proprietary, not intended for public distribution, open source, or commercial use. All rights are reserved. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, electronic or mechanical, including photocopying, recording, or by any information storage or retrieval system, without the prior written permission of the copyright holder.
#
# Permission to use, copy, modify, and distribute this software is strictly prohibited without prior written authorization from the copyright holder.
#
# Please contact the copyright holder at echo ZnVpd3pjaHBzQG1vem1haWwuY29t | base64 -d && echo for any inquiries or requests for authorization to use the software.
#

spring.application.name=amlume-shop

# --- Actuator ---
# Expose health and metrics endpoints (adjust as needed for security)
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoint.health.show-details=when_authorized
# none, read_only, unrestricted
management.endpoint.metrics.access=unrestricted
management.endpoint.prometheus.access=unrestricted

# ASN
asn.update.schedule=0 0 0 * * *

# --- Cache Metrics (Actuator/Micrometer) ---
# Enable binding of cache metrics
management.metrics.cache.instrument=true
# Enable specific Redis metrics (includes connection details, commands, etc.)
management.metrics.enable.redis=true
# Ensure general cache metrics are enabled (usually default)
management.metrics.enable.cache=true

# GeoIP2
geoip2.account.id=${GEOIP2_ACCOUNT_ID}
geoip2.license.key=${GEOIP2_LICENSE_KEY}

# Database related

## H2 Database
spring.h2.console.enabled=false
spring.datasource.url=jdbc:h2:mem:test
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

## Good for debugging
#spring.jpa.show-sql=true // Show SQL generated by JPA queries in the console
spring.jpa.show-sql=true

#spring.jpa.properties.hibernate.format_sql=true // Format properly theSQL queries in the console
spring.jpa.properties.hibernate.format_sql=true

#Default: Create database schema on startup and drop it on shutdown. Use "update" instead of "create-drop" in production. See https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-hints
spring.jpa.hibernate.ddl-auto=create-drop

## Database Timezone
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

#Use the default physical naming strategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#spring.jpa.hibernate.naming.implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

# Files related
## Path to store images
project.image=images/

# --- Logging ---
logging.level.me.amlu.shop.amlume_shop=DEBUG # Set appropriate levels
logging.level.org.springframework.cache=TRACE # Set to TRACE to see cache hits/misses logged by Spring

# Rate Limiting Configuration
rate-limiting.ip.limit=100
rate-limiting.ip.window-seconds=60
rate-limiting.username.limit=20
rate-limiting.username.window-seconds=60


# Redis configuration
spring.data.redis.host=localhost # Or your Redis server's hostname/IP
spring.data.redis.port=6379      # Default Redis port
# spring.data.redis.password=your_redis_password (If you have a password)
spring.redis.port=6379
spring.redis.host=localhost
#spring.redis.password=

# Secrets and keys

## HCP configuration
hcp.organization-id=${HCP_ORGANIZATION_ID}
hcp.project-id=${HCP_PROJECT_ID}
hcp.app-name=${HCP_APP_NAME}
#HCP_CLIENT_ID: ${HCP_CLIENT_ID}
#HCP_CLIENT_SECRET: ${HCP_CLIENT_SECRET}
#HCP_ORGANIZATION_ID: your-org-id
#HCP_PROJECT_ID: your-project-id
#HCP_APP_NAME: sample-app

# Security configuration
token.validity.access=900 // 15 minutes in seconds
token.validity.refresh=604800 // 7 days in seconds
clock.skew.tolerance=15

## PASETO token
paseto.token-no-footer.parts.length=3
paseto.token-with-footer.parts.length=4
token.processing.batch.size=100

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict
server.servlet.session.cookie.name=SESSIONID
server.servlet.session.tracking-modes=cookie

# Valkey configuration
valkey.host=${VALKEY_HOST:localhost}
valkey.port=${VALKEY_PORT:6379}
valkey.nodes=${VALKEY_HOST:localhost}:${VALKEY_PORT:6379}
valkey.cluster.enabled=true
valkey.cluster.nodes=${VALKEY_HOST:localhost}:${VALKEY_PORT:6379}
valkey.password=${VALKEY_PASSWORD:}
valkey.timeout=5000
valkey.max-attempts=3
valkey.max-total=100
valkey.max-idle=10
valkey.min-idle=5
valkey.test-on-borrow=true
valkey.test-on-return=true
valkey.test-while-idle=true
valkey.time-between-eviction-runs-millis=30000
valkey.min-evictable-idle-time-millis=60000
valkey.num-tests-per-eviction-run=3
valkey.connection-test-query=SELECT 1
valkey.connection-timeout=5000
valkey.so-timeout=5000
valkey.max-wait-millis=5000
valkey.block-when-exhausted=true
valkey.jedis.pool.enabled=true
valkey.jedis.pool.max-active=100
valkey.jedis.pool.max-idle=10
valkey.jedis.pool.min-idle=5
valkey.jedis.pool.max-wait=5000
valkey.jedis.pool.test-on-borrow=true
valkey.jedis.pool.test-on-return=true
valkey.jedis.pool.test-while-idle=true
valkey.jedis.pool.time-between-eviction-runs-millis=30000
valkey.jedis.pool.min-evictable-idle-time-millis=60000
valkey.jedis.pool.num-tests-per-eviction-run=3
valkey.jedis.pool.connection-test-query=SELECT 1
valkey.jedis.pool.connection-timeout=5000
valkey.jedis.pool.so-timeout=5000
valkey.jedis.pool.max-wait-millis=5000
valkey.jedis.pool.block-when-exhausted=true

# Virtual threads configuration
# Can enable or disable manually
spring.threads.virtual.enabled=true
spring.threads.virtual.enabled.manually=false
# Addressing Process Termination -
# ensure the uninterrupted execution of scheduled tasks in non-web Spring Boot
spring.main.keep-alive=true
