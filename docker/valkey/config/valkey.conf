# ./docker/valkey/config/valkey.conf

# Bind to all interfaces inside the container
bind 0.0.0.0

# Password Protection (ensure this matches VALKEY_PASSWORD in your .env)
# Set the password (using the literal placeholder)
requirepass your-valkey-password

# --- SSL/TLS Configuration ---
# Disable non-TLS port
# Disable the non-TLS port if you only want TLS connections
port 0

# Enable TLS and specify the port
tls-port 6379

# Specify paths INSIDE the container where certs will be mounted

# tls-cert-file /certs/valkey_certificate.pem
# tls-key-file /certs/valkey_private_key.pem

# Corresponds to ./certificates/valkey/valkey-server.pem
tls-cert-file /certs/valkey-server.pem

#tls-cert-file /certs/server.crt
# tls-cert-file /etc/valkey/ssl/server.crt

# Corresponds to ./certificates/valkey/valkey-server-key.pem
tls-key-file /certs/valkey-server-key.pem
#tls-key-file /certs/server.key
# tls-key-file /etc/valkey/ssl/server.key

# Optional: If you have a CA certificate for client auth or to trust
# Corresponds to ./certificates/valkey/ca.pem (the mkcert root CA)
tls-ca-cert-file /certs/ca.pem
# tls-ca-cert-file /certs/ca.crt

# Optional: If using DH ciphers
# tls-dh-params-file /certs/dhparams.pem

# Optional: If your client (Spring Boot app) doesn't present a certificate
# tls-auth-clients no

# For production, set a valid CA certificate
tls-auth-clients yes

# Optional but recommended:
# Protocols
tls-protocols "TLSv1.2 TLSv1.3"

# tls-ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256
# tls-prefer-server-ciphers yes

# Optional: Log level
loglevel notice
#logfile "" # Log to stdout/stderr for Docker logs

# dir /data # If you want persistence
# dbfilename dump.vdb

# Disable persistent storage if not needed for dev cache
appendonly no
